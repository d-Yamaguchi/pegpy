// swift origami

include common.origami

#FuncDecl        = func ${1} ${2} -> ${type(1)} ${@block.ret(-1)}
#FuncExpr        = {${1} -> ${type(-1)} in ${@ret(-1)}}
#Match           = "if ${1:}" " else if "
#MatchCase@1     = true ${@block(1)}
#MatchCase@2     = ${2} ${@block(1)}

#Param           = _ ${1}: ${type(1)}
#LetDecl@2       = let ${name}: ${type(expr)} = ${expr}
#LetDecl@3       = let ${name}: ${type} = ${expr}
#VarDecl@2       = var ${name}: ${type(expr)} = ${expr}
#VarDecl@3       = var ${name}: ${type} = ${expr}

#TrueExpr        = true
#FalseExpr       = false
#NullExpr        = nil

#TemplateExpr    = \"\"\"${1}\"\"\"

#Float           = Double
//#Char            = UInt8

Int@1:Float->Int    = Int(${1})
Int@1:String->Int   = Int(${1})!
//Int@1:Char->Int     = Int(${1})
Int@1:Bool->Int     = ${1} ? 1 : 0

Float@1:Int->Float    = Double(${1})
Float@1:String->Float = Double(${1})!
//Float@1:Char->Float   = Double(${1})
Float@1:Bool->Float   = ${1} ? 1.0 : 0.0

String@1:Int->String   = String(${1})
String@1:Float->String = String(${1})
//String@1:Char->String  = String(${1})
String@1:Bool->String  = String(${1})

//Char@1:Int->Char    = UInt8(${1})
//Char@1:Float->Char  = UInt8(${1})
//Char@1:String->Char = UInt8(%s.utf8.first!)
//Char@1:Bool->Char   = ${1} ? 1 : 0

Bool@1:Int->Bool    = ${1} != 0 ? true : false
Bool@1:Float->Bool  = ${1} != 0 ? true : false
Bool@1:String->Bool = Bool(${1})!
//Bool@1:Char->Bool   = ${1} != 0 ? true : false
